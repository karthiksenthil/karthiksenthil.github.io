<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Karthik Senthil</title>
 <link href="https://karthiksenthil.github.io/atom.xml" rel="self"/>
 <link href="https://karthiksenthil.github.io/"/>
 <updated>2016-05-10T00:12:01+05:30</updated>
 <id>https://karthiksenthil.github.io</id>
 <author>
   <name>Karthik Senthil</name>
   <email>karthik.senthil94@gmail.com</email>
 </author>

 
 <entry>
   <title>[GSoC 2016] Installing PAKCS</title>
   <link href="https://karthiksenthil.github.io/2016/05/09/gsoc16/"/>
   <updated>2016-05-09T00:00:00+05:30</updated>
   <id>https://karthiksenthil.github.io/2016/05/09/gsoc16</id>
   <content type="html">&lt;p&gt;I spent the last few days surfing through the current codebase in ruby_curry in order to identify the code workflow for a single run of the tool.&lt;/p&gt;

&lt;p&gt;I have also started documenting a directory wise description of files for the status report which should be available soon.&lt;/p&gt;

&lt;p&gt;With regards to installing PAKCS on my local machine, I followed the instructions provided &lt;a href=&quot;https://www.informatik.uni-kiel.de/~pakcs/download.html&quot;&gt;here&lt;/a&gt;. I already had an updated version of &lt;a href=&quot;http://www.swi-prolog.org/&quot;&gt;SWI-Prolog&lt;/a&gt; and hence went ahead to just download the Linux(64 bit) release of &lt;a href=&quot;https://www.informatik.uni-kiel.de/~pakcs/download/pakcs-1.14.1-amd64-Linux.tar.gz&quot;&gt;PAKCS v1.14.1&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The build took quite some time, but towards the end it was a smooth install. I could verify the working with the &lt;a href=&quot;http://www-ps.informatik.uni-kiel.de/smap/smap.cgi?download/1/1&quot;&gt;Naive Reverse&lt;/a&gt; example.&lt;/p&gt;

&lt;p&gt;An interesting feature in PAKCS is the curry2xml tool (using :xml in the REPL). This caught my attention as ruby_curry also aims to convert FlatCurry into JSON(in the frontend) for further processing into Ruby object code. So I’m looking into the working and features of this tool in PAKCS before implementing a similar idea for JSON in ruby_curry.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[GSoC 2016] Community Bonding - First Post</title>
   <link href="https://karthiksenthil.github.io/2016/05/07/gsoc16/"/>
   <updated>2016-05-07T00:00:00+05:30</updated>
   <id>https://karthiksenthil.github.io/2016/05/07/gsoc16</id>
   <content type="html">&lt;p&gt;Hello all!&lt;/p&gt;

&lt;p&gt;This year as part of Google Summer of Code 2016 I will continue working on &lt;a href=&quot;https://github.com/karthiksenthil/ruby_curry&quot;&gt;ruby_curry&lt;/a&gt;, extending it to a full fledged compiler implementation for FlatCurry, a flavour of the functional logic programming language &lt;a href=&quot;https://en.wikipedia.org/wiki/Curry_(programming_language)&quot;&gt;Curry&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;More details about the project can be found &lt;a href=&quot;https://summerofcode.withgoogle.com/projects/#4517222395412480&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After discussions with my mentor, Prof. Antoy, I have decided to spend the initial part of the Community Bonding period for the following -&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; Status Report - detailed draft of current status of ruby_curry w.r.t. features and bugs &lt;/li&gt;
&lt;li&gt; Setting up &lt;a href=&quot;https://www.informatik.uni-kiel.de/~pakcs/&quot;&gt;PAKCS&lt;/a&gt; and &lt;a href=&quot;https://www-ps.informatik.uni-kiel.de/kics2/&quot;&gt;KiCS2&lt;/a&gt; on local machine &lt;/li&gt;
&lt;li&gt; Survey on the above compilers &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Looking forward to learn more :)&lt;/p&gt;

&lt;p&gt;P.S. : And yes, this year I will update about my progress in this project through regular blog posts on my personal website itself.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Multrix - A tool for dynamic dependence analysis of a program</title>
   <link href="https://karthiksenthil.github.io/2015/08/18/multrix/"/>
   <updated>2015-08-18T00:00:00+05:30</updated>
   <id>https://karthiksenthil.github.io/2015/08/18/multrix</id>
   <content type="html">&lt;p&gt;&lt;em&gt;A project undertaken in the &lt;a href=&quot;http://hpc.nitk.ac.in/&quot;&gt;HPC Research Group&lt;/a&gt; at National Institute of Technology Karnataka, India&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Multrix is an automatic, dynamic and language-independent tool to construct the Node Dependency Matrix(NDM) of an input program. It uses dynamic binary instrumentation techniques to identify dependencies at instruction level in the input program, and reprsent the same using the NDM.&lt;/p&gt;

&lt;p&gt;The Intel PIN DBI framework was used for instrumentation. Pin provides great flexibility in analysing executables with features to insert stubs or breakpoints in the running program. A custom program written using the Pin API to analyse running programs is a called PinTool.&lt;/p&gt;

&lt;p&gt;Usage and execution cycle in Pin :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Design Pintool to perform required analysis&lt;/li&gt;
  &lt;li&gt;Compile the Pintool into an &lt;code&gt;so&lt;/code&gt; file(shared object)&lt;/li&gt;
  &lt;li&gt;Attach the file to the program and execute it&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Work in progress&lt;/em&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>What is HPC?</title>
   <link href="https://karthiksenthil.github.io/2015/06/24/whats-hpc/"/>
   <updated>2015-06-24T00:00:00+05:30</updated>
   <id>https://karthiksenthil.github.io/2015/06/24/whats-hpc</id>
   <content type="html">&lt;p&gt;High Performance Computing(HPC) is becoming a trending term in Computer Science. Here is my view or definition of HPC in layman words.&lt;/p&gt;

&lt;p&gt;As humans we are bound by the performance metric in any activity that we pursue, constantly aiming to improve this metric. So it is unsurprising that computing devices these days are also striving to give their best performance.&lt;/p&gt;

&lt;p&gt;In my view, HPC can be defined as any activity that reduces computation time of a process on a computing device and accordingly shows signs of improvement(large or small-scale) in performance. Even the smallest step of reducing unecessary iterations in a for-loop can be a simple step towards high performance computing. A tool which emphasises this : &lt;a href=&quot;http://karthiksenthil.github.io/2015/08/18/multrix/&quot;&gt;Multrix&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So HPC doesn’t just refer to large scale parallel architectures or huge clusters of CPUs and GPUs with millions of cores. The simple small-scale optimizations that when implemented conserve our computation resources are the activities that define and drive HPC.&lt;/p&gt;
</content>
 </entry>
 

</feed>
